<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
</root>