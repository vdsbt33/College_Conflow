<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        90L+DzmwOr1S/Ub5AAAAAElFTkSuQmCC
</value>
  </data>
</root>